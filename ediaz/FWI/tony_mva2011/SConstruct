from rsf.proj import *
import fdmod,encode,wei,adcig
import math

# ------------------------------------------------------------
par = {
    'nx':500, 'ox':0, 'dx':0.02,  'lx':'x', 'ux':'km',
    'ny':1,   'oy':0, 'dy':0.02,  'ly':'y', 'uy':'km',
    'nz':250, 'oz':0, 'dz':0.01,  'lz':'z', 'uz':'km',
    'nt':1000,'ot':0, 'dt':0.002, 'lt':'t', 'ut':'s',
    'kt':80,
    'jsnap':100,
    'nb':100,
    'frq':15
    }
fdmod.param(par)

par['impulse']='n'

# taper parameters
par['xk']=50
par['yk']=50
par['xl']=par['nx']-50
par['yl']=par['ny']-50

# migration parameters
par['jw']=1
par['ow']=2
par['nw']=72
par['dw']=1/(par['nt']*par['dt'])

# deconvolution regularization
par['deps']=1e-5

# lag parameters
par['nhz']=0
par['nhx']=60
par['nhy']=0
par['nht']=110
par['mht']=2*par['nht']+1
par['dht']=  par['dt'] *2
par['oht']= -par['nht']*par['dht']
par['tratio']=1.0
par['xratio']=1.0
par['lratio']=1.0

wei.wempar(par)

# ------------------------------------------------------------
def zwtcube(custom,par):
    return '''
    grey3 title="" flat=y labelsz=6 labelfat=2 wantaxis=y framelabel=n
    frame1=%d frame2=%d frame3=%d
    label1=z label2=f label3="\F10 t\F3"
    unit1=km unit2=Hz unit3=s
    screenratio=1 point1=0.65 point2=0.65
    %s
    ''' %(75,par['nw']/2,par['nht'],
    par['labelattr']+' '+custom)

# ------------------------------------------------------------
# source/receiver coordinates
# ------------------------------------------------------------
par['xsou']=par['ox']+par['nx']/2*par['dx']
par['zsou']=par['oz']
par['ixsou']=(par['xsou']-par['ox'])/par['dx']

fdmod.point3d('ss',par['xsou'],par['oy'],par['zsou'],par)
Flow('ss2d','ss','window n1=2 j1=2')
Plot('ss','ss2d',fdmod.ssplot('plotcol=2',par))

fdmod.horizontal3d('rr',par['oz'],par)
Flow('rr2d','rr','window n1=2 j1=2')
Plot('rr','rr2d',fdmod.rrplot('plotcol=6 plotfat=10',par))

# ------------------------------------------------------------
# all CIGs for extension calculation
par['jcx']=5
par['ncx']=par['nx']/par['jcx']
par['dcx']=par['dx']*par['jcx']
par['fcx']=0

allcc = range(0,par['nx']+1,par['jcx'])

for icx in allcc:
    ctag = "-%03d"%icx
    cipx = par['ox']+icx*par['dx']
    cipy = par['oy']
    
    fdmod.vertical3d('cc'+ctag,cipx,cipy,par)
    Plot('cc'+ctag,'window j1=2 |'+fdmod.bbplot('plotcol=1',par))
    
Flow('cc',map(lambda x: 'cc-%03d' % x,allcc),
     'rcat axis=2 space=n ${SOURCES[1:%d]}'%(par['nx']/par['jcx']))
Plot('cc',map(lambda x: 'cc-%03d.vpl' % x,allcc),'Overlay')

# ------------------------------------------------------------
# one CIG for gradient calculation
par['xcig']=par['xsou']+1
par['zcig']=1.5
par['icig']=(par['xcig']-par['ox'])/par['dx']

fdmod.vertical3d('gg',par['xcig'],par['oy'],par)
Plot('gg','window j1=2 |'
     + fdmod.qqplot('plotcol=3 plotfat=5',par))

# ------------------------------------------------------------
# wavelet
fdmod.wavelet('wav_',par['frq'],par)
Flow(  'wav','wav_','transp')
Result('wav','transp |' + fdmod.waveplot('',par))

# ------------------------------------------------------------
# model parameters
par['vp']=3.0
par['ro']=2.0

# ------------------------------------------------------------
# density
Flow('den',None,
     '''
     spike nsp=5 mag=0,0,0,0,1
     n1=%(nz)d o1=%(oz)g d1=%(dz)g k1=51,76,101,126,151
     n2=%(nx)d o2=%(ox)g d2=%(dx)g  |
     put label1=%(lz)s label2=%(lx)s unit1=%(uz)s unit2=%(ux)s |
     add add=1.0
     ''' % par)
Flow('con','den','math output=1.0')
Plot('den','add add=-1.0 | ricker1 frequency=10 |'
     + fdmod.cgrey('',par))

# velocity
Flow('vel','den','math output="%g"' %par['vp'])
Plot('vel',fdmod.cgrey('allpos=y bias=2.0',par))

for i in (['vel','den']):
    Result(i,[i,'rr','cc','gg','ss'],'Overlay')

# slowness
wei.slowness('slo','vel',par)
Flow('slo-L','slo','scale rscale=1.2')
Flow('slo-C','slo','scale rscale=1.0')
Flow('slo-H','slo','scale rscale=0.8')

par['zref-L']=1.90
par['zref-C']=1.50
par['zref-H']=1.15

fdmod.horizontal('hh',par['zref-C'],par)
Plot('hh',fdmod.bbplot('plotcol=5 plotfat=5',par))
for m in (['-L','-C','-H']):
    fdmod.horizontal('hh'+m,par['zref'+m],par)
    Plot('hh'+m,fdmod.bbplot('plotcol=5 plotfat=5',par))

par['zzof-L']=1.25
par['zzof-C']=1.50
par['zzof-H']=1.90
for m in (['-L','-C','-H']):
    fdmod.point('cc'+m,par['xcig'],par['zzof'+m],par)
    Plot('cc'+m,fdmod.qqplot('plotcol=3 plotfat=15',par))

# ------------------------------------------------------------
# acoustic modeling
Flow('dm',None,
     '''
     spike nsp=1 mag=1
     n1=%(nx)d d1=%(dx)g o1=%(ox)g k1=%(xk)d l1=%(xl)d
     n2=%(nt)d d2=%(dt)g o2=%(ot)g |
     smooth rect1=50
     ''' % par)
fdmod.awefd2d('dd','ww','wav','vel','den','ss2d','rr2d','',par)
fdmod.awefd2d('do','wo','wav','vel','con','ss2d','rr2d','',par)
Flow('dat','dd do dm',
     '''
     add scale=1,-1 ${SOURCES[1]} | 
     add mode=p ${SOURCES[2]}
     ''' %par)
Result('dat',
       'transp |' + fdmod.dgrey('',par))

# ------------------------------------------------------------
# WEM data - time domain
Flow('sou','wav',
     '''
     window |
     pad beg2=%(ixsou)d n2out=%(nx)d |
     put o2=%(ox)g d2=%(dx)g label2=%(lx)s unit2=%(ux)s
     o3=0      d3=1      label3=%(ly)s unit3=%(uy)s
     ''' %par )
Flow('rec','dat','transp plane=12')

# ------------------------------------------------------------
# WEM data - freq domain
encode.time2freq('sou','dws',par)
encode.time2freq('rec','dwr',par)

for m in (['-L','-C','-H']):
    
    # correlation I.C. (time lag)
    Flow(['cic'+m,'one'+m],['dws','dwr','slo'+m,'cc'],
         '''
         wei verb=y irun=hic dflg=n
         dat=${SOURCES[1]}
         slo=${SOURCES[2]}
         coo=${SOURCES[3]}
         cip=${TARGETS[1]}
         %s
         ''' % (wei.param(par)+wei.eicpar(par)))

    # CIC plots
    Plot(  'cic'+m,
           'stack axis=1 | window | spray axis=2 n=%(nx)d o=%(ox)g d=%(dx)g |'%par
           + fdmod.cgrey('',par))  
    Result('cic'+m,['cic'+m,'rr','gg'],'Overlay')
    Result('cac'+m,['cic'+m,'rr'     ],'Overlay')
    Result('cec'+m,['cic'+m,'rr','cc'+m],'Overlay')

    # time-lag plots
    Flow('hic'+m,'one'+m,
         '''
         window n1=1 f1=%(nhx)d |
         put n2=%(nz)d n3=%(ncx)d | transp plane=23 | stack | transp
         '''%par)
    Result('hic'+m,adcig.tgrey('screenht=3',par))
    Result('cut'+m,
           'hic'+m,
           '''
           window n1=1 min1=%g |
           scale axis=123 |
           graph title="" plotfat=5 min2=-1 max2=+1
           screenratio=1.5 wherexlabel=t xll=2 yll=1
           label1="\F10 t\F3" unit1="s" label2="" unit2="" %s 
           '''%(par['zref'+m],par['labelattr']+par['labelrot']))

    # space-lag plots
    Flow('xic'+m,'one'+m,
          '''
          window n4=1 f4=%(nht)d |
          put n2=%(nz)d n3=%(ncx)d | transp plane=23 | stack | transp
          '''%par)
    Result('xic'+m,adcig.xgrey('screenht=3',par))

    # mixed-lag plots
    Flow('eic'+m,'one'+m,
         'window | put n3=%(nz)d o3=%(oz)g d3=%(dz)g n4=%(ncx)d |'%par +
         'window n3=1 min3=%g |'%par['zzof'+m] + 
         'transp plane=23 | stack | transp')
    Result('eic'+m,adcig.lgrey('screenht=3',par))

    # event mask
    Flow('msk'+m,None,
         '''
         spike nsp=1 mag=1
         n1=%(nz)d o1=%(oz)g d1=%(dz)g
         n2=%(mht)d o2=%(oht)g d2=%(dht)g
         ''' %par
         + 'k1=%d'%((par['zref'+m]-par['oz'])/par['dz']))
    Result('msk'+m,adcig.tgrey('screenht=3',par))

# ------------------------------------------------------------
# penalty function

Flow('pen','eic-C',
     '''
     math output="sqrt((x1*%(vp)g)^2+x2^2)"
     '''%par)
Result('pen',adcig.lgrey('screenht=3 color=E',par))

# ------------------------------------------------------------
# time shift array: e2iwt(z,w,t)
Flow('twspace',None,
     '''
     spike nsp=1 mag=1
     n1=%d o1=%g d1=%g
     n2=%d o2=%g d2=%g |
     math output="0" |
     put label1=f unit1=Hz label2="\F10 t\F3" unit2=s
     ''' %(par['nw'], par['ow'], par['dw'],
           par['mht'],par['oht'],par['dht'])
     )
Flow('e2iwt_r','twspace','math output="+cos(2*2*%g*x2*x1)"'%math.pi)
Flow('e2iwt_i','twspace','math output="-sin(2*2*%g*x2*x1)"'%math.pi)
Flow('e2iwt','e2iwt_r e2iwt_i',
     '''
     cmplx ${SOURCES[1]} |
     spray axis=1 n=%(nz)d o=%(oz)g d=%(dz)g |
     put label1=%(lz)s unit1=%(uz)s
     ''' %par)
Result('e2iwt','real | byte gainpanel=a pclip=100 |' + zwtcube('',par))

# ------------------------------------------------------------
# penalty
Flow('tau',None, 
     '''
     spike nsp=1 mag=1 n1=%(mht)d o1=%(oht)g d1=%(dht)g |
     math output="x1"
     ''' %par)
Result('tau','graph title=""')

Flow('tauLI','tau', 
     '''
     spray axis=1 n=%(nw)d o=%(ow)g d=%(dw)g |
     spray axis=1 n=%(nz)d o=%(oz)g d=%(dz)g |
     rtoc |
     put label1=%(lz)s unit1=%(uz)s label2=f unit2=Hz label3="\F10 t\F3" unit3=s
     ''' %par)
Result('tauLI','real | byte gainpanel=a pclip=100 |' + zwtcube('',par))

# ------------------------------------------------------------
# adjoint-state method
# ------------------------------------------------------------

# source function
Flow('fs','wav','transp | fft1 inv=n opt=n | window squeeze=n n1=%(nw)d min1=%(ow)g j1=%(jw)d | transp'%par)
Flow('fr','dat','transp | fft1 inv=n opt=n | window squeeze=n n1=%(nw)d min1=%(ow)g j1=%(jw)d | transp'%par)

for m in (['-L','-C','-H']):

    # ------------------------------------------------------------
    # state variables: u(x,y,z,f)
    wei.genwfl('us'+m,'fs','ss','slo'+m,'y','y',par)
    wei.genwfl('ur'+m,'fr','rr','slo'+m,'y','n',par)
    
    # ------------------------------------------------------------
    # extended wavefield: u(z,w,t)
    for i in (['s','r']):
        Flow('w'+i+m,'u'+i+m,
             '''
             window n1=1 f1=%(icig)d |
             spray axis=3 n=%(mht)d o=%(oht)g d=%(dht)g |
             put label3="\F10 t\F3" unit3="s"
             '''%par)

    # ------------------------------------------------------------
    # extended image: r(z,w,t)
    if( par['impulse']=='y'):
        Flow('r'+m,['hic'+m,'msk'+m],
             '''
             add mode=p ${SOURCES[1]} |
             spray axis=2 space=n n=%(nw)d o=%(ow)g d=%(dw)g |
             rtoc
             '''%par)
    else:
        Flow('r'+m,'hic'+m,
             '''
             spray axis=2 space=n n=%(nw)d o=%(ow)g d=%(dw)g |
             rtoc
             '''%par)
    
    # ------------------------------------------------------------
    # adjoint source: g(z,f)
    Flow('gs'+m,['r'+m,'wr'+m,'e2iwt','tauLI'],
         '''
         math output="t*r*conj(w)*conj(e)"
         r=${SOURCES[0]} w=${SOURCES[1]} e=${SOURCES[2]} t=${SOURCES[3]} |
         stack axis=3 | real | rtoc |
         put label1=%(lz)s unit1=%(uz)s label2=f unit2=Hz
         '''%par,stdin=0)
    Flow('gr'+m,['r'+m,'ws'+m,'e2iwt','tauLI'],
         '''
         math output="t*r*w*conj(e)"
         r=${SOURCES[0]} w=${SOURCES[1]} e=${SOURCES[2]} t=${SOURCES[3]}|
         stack axis=3 | real | rtoc |
         put label1=%(lz)s unit1=%(uz)s label2=f unit2=Hz
         '''%par,stdin=0)
    
    # ------------------------------------------------------------
    # adjoint state variables: wavefield a(x,y,z,f)
    wei.genwfl('as'+m,'gs'+m,'gg','slo'+m,'n','n',par)
    wei.genwfl('ar'+m,'gr'+m,'gg','slo'+m,'n','y',par)
    
    # ------------------------------------------------------------
    # gradient
    Flow('grd'+m,['us'+m,'ur'+m,'as'+m,'ar'+m],
         '''
         math
         us=${SOURCES[0]} ur=${SOURCES[1]}
         as=${SOURCES[2]} ar=${SOURCES[3]}
         output="(3.14*x4)^2*(conj(us)*(as)+conj(ur)*(ar))" |
         window | transp plane=23 | stack | transp | real
         ''',stdin=0)

    # fake all shots/all CIGs
    Flow('gst'+m,'grd'+m,
         '''
         stack axis=2 |
         spray axis=2 n=%(nx)d o=%(ox)g d=%(dx)g
         '''%par)
    
# ------------------------------------------------------------
# plot gradients
grdlist = ['grd-L','grd-C','grd-H']
Flow('grdall',grdlist,
     '''
     cat axis=3 space=n ${SOURCES[1:%d]} |
     byte gainpanel=a pclip=99.8
     '''%len(grdlist))
for g in range(len(grdlist)):
    Plot(grdlist[g],'grdall',
         'window n3=1 f3=%d |'%g
         + fdmod.cgrey('color=E',par))

gstlist = ['gst-L','gst-C','gst-H']
Flow('gstall',gstlist,
     '''
     cat axis=3 space=n ${SOURCES[1:%d]} |
     byte gainpanel=a pclip=99.8
     '''%len(grdlist))
for g in range(len(gstlist)):
    Plot(gstlist[g],'gstall',
         'window n3=1 f3=%d |'%g
         + fdmod.cgrey('color=E',par))


for m in (['-L','-C','-H']):

    Result('r'+m,'real | byte gainpanel=a pclip=100 |'
           + zwtcube('frame1=%d'%((par['zref'+m]-par['oz'])/par['dz']),par))

    for i in (['s','r']):
        Result('u'+i+m,'window |transp plane=12 |sffft3 inv=y opt=y axis=3| real |'
               + fdmod.wgrey('pclip=99.9',par))

        Result('w'+i+m,'real | byte gainpanel=a pclip=100 |'
               + zwtcube('frame1=%d'%((par['zref'+m]-par['oz'])/par['dz']),par))

        Result('g'+i+m,
               '''
               real |
               grey title="" pclip=100 screenratio=0.25 screenht=3 %s
               '''%par['labelattr']+par['labelrot'])
        
        Result('a'+i+m,'window |transp plane=12 |sffft3 inv=y opt=y axis=3| real |'
               +fdmod.wgrey('pclip=99.9',par))
        
    Result('grd'+m,['grd'+m,'rr','ss','hh','gg'],'Overlay')
    Result('gst'+m,['gst'+m,'rr',     'hh'     ],'Overlay')

End()
