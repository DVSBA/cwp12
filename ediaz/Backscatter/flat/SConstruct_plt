# 
from rsf.proj import *
import fdmod,adcig,encode,wemig,math
import commands,pplot

par = {
    'nt':3001, 'dt':0.001, 'ot':0, 'lt':'t', 'ut':'s',     
    'nx':1000, 'dx':0.01,  'ox':0, 'lx':'x', 'ux':'km',
    'ny':1,    'dy':0.01,  'oy':0, 'ly':'y', 'uy':'km',
    'nz':300,  'dz':0.01, 'oz':0, 'lz':'z', 'uz':'km',
    'kt':150,
    'nb':150,
    'jsnap_gr':25
    }
fdmod.param(par)
# ------------------------------------------------------------
# source
par['xsou']=par['ox']+par['nx']/2*par['dx']
par['zsou']=par['oz']
par['ixsou']=par['nx']/2
par['izsou']=1

par['jcx']=5
par['ncx']=par['nx']/par['jcx']

# ------------------------------------------------------------
# source
fdmod.point('ss',par['xsou'],par['zsou'],par)
fdmod.horizontal('ttall',par['oz'],par)
Flow('ssall','ttall','window j2=%(jcx)d'%par)
Plot('ss',   fdmod.ssplot(' labelsz=12 xll=3 yll=2',par))
Plot('ssall',fdmod.ssplot(' labelsz=12 xll=3 yll=2 yll=.01',par))

# ------------------------------------------------------------
# receivers
fdmod.horizontal('rr',0,par)
Plot('rr',fdmod.rrplot(' labelsz=12 xll=3 yll=2 yll=.01',par))

# ------------------------------------------------------------
# CIGs at uniformly-sampled locations
fdmod.boxarray('gt',
               par['nz'],par['oz'],par['dz'],
               par['nx'],par['ox'],par['dx'],
               par)
Flow('gg','gt',
     'put n2=%(nz)d n3=%(nx)d | window j3=%(jcx)d |'%par + 
     'put n2=%d n3=1'% (par['nz']*par['nx']/par['jcx']) )
fdmod.vertical('ggone',par['xsou'],par)
Plot('ggone',fdmod.qqplot(' labelsz=12 xll=3 yll=2 yll=.01',par))

Flow('gg80','gg','put n2=%d n3=%d |window n3=1 f3=79'%(par['nz'],par['ncx']))
Plot('gg80',fdmod.qqplot(' labelsz=12 xll=3 yll=2',par))

Flow('gg124','gg','put n2=%d n3=%d |window n3=1 f3=123'%(par['nz'],par['ncx']))
Plot('gg124',fdmod.qqplot(' labelsz=12 xll=3 yll=2',par))

# ------------------------------------------------------------

# ------------------------------------------------------------
# EIC computational domain
par['nhz']=0
par['nhx']=100
par['nhz']=par['nhx']
par['nht']=100
par['dht']=par['dt']*10

adcig.tparam((par['nhx']*par['dx'])/(par['nht']*par['dt']),
             2*par['nht']+1,-par['nht']*par['dt'],par['dt'],
               par['nz']   ,            par['oz'],par['dz'],
             par)

adcig.xparam(
             2*par['nhx']+1,-par['nhx']*par['dx'],par['dx'],
               par['nz']   ,            par['oz'],par['dz'],
             par)

adcig.eparam(10.0,
             2*par['nhx']+1,-par['nhx']*par['dx'],par['dx'],
             2*par['nhz']+1,-par['nhz']*par['dz'],par['dz'],
             2*par['nht']+1,-par['nht']*par['dt'],par['dt'],
             par)

# ------------------------------------------------------------
# reflectors
zo=150
perc=0.85
perc_inc=0.03

par['perc']=perc
par['perc_inc']=perc_inc

nvels=11

vels=''
for i in range(nvels):
# ------------------------------------------------------------
# CIPs
     par['zi']=math.floor(zo*par['perc'])
     tag='%02d'%i
     
     vels=vels+'vel'+tag+'.rsf '



for i in range(nvels):
# ------------------------------------------------------------
# CIPs
     par['zi']=math.floor(zo*par['perc'])
     tag='%02d'%i
     

     par['perc'] = par['perc'] + par['perc_inc']

# ------------------------------------------------------------
# reflectors
zo=150
perc=0.85
perc_inc=0.03

par['perc']=perc
par['perc_inc']=perc_inc

nvels=11

vels=''
for i in range(nvels):
# ------------------------------------------------------------
# CIPs
     par['zi']=math.floor(zo*par['perc'])
     tag='%02d'%i
     
     fdmod.horizontal('ct'+tag,par['zi']*par['dz'],par)
     Flow('cc'+tag,'ct'+tag,'window j2=%(jcx)d'%par)
     Plot('cc'+tag,   fdmod.qqplot('plotcol=5 plotfat=10 labelsz=12 xll=3 yll=2',par))

     Flow('den'+tag,None,
         '''
         spike nsp=1 mag=1.0
         n1=%(nz)d o1=%(oz)g d1=%(dz)g k1=%(zi)d l1=%(nz)d |
         spray axis=2 n=%(nx)d o=%(ox)g d=%(dx)g |
         add add=1
         ''' % (par))
     Flow('vel'+tag,'den'+tag,'math output="%(perc)f*(2.2*(2-input) ) +(input-1)*(3.5) "'%( par))
     Flow('vel-const'+tag,'den'+tag,'math output="%(perc)f*(2.2 +input*0 )"'%( par))
     par['perc'] = par['perc'] + par['perc_inc']
     vels=vels+'vel'+tag+'.rsf '



for i in range(nvels):
# ------------------------------------------------------------
# CIPs
     par['zi']=math.floor(zo*par['perc'])
     tag='%02d'%i
     
     Flow('denZ'+tag,['vel'+tag],
         '''
         math  output="5/input"
         ''' % (par))

     Plot('denZ'+tag,fdmod.cgrey('pclip=100 bias=1 labelsz=12 xll=3 yll=2',par))
     Flow('den-const'+tag,'den'+tag,'math output="5/(%(perc)f*(2.2 +input*0 ))"'%( par))
    
     Flow('Z'+tag,['denZ'+tag,'vel'+tag],'add mode=p ${SOURCES[1]}')

     par['perc'] = par['perc'] + par['perc_inc']














Flow('zer','den00','math output="1.0"')
Flow('vc','den00','math output="2.2"')


for i in range(nvels):
     tag='%02d'%i 
     Plot('den'+tag,fdmod.cgrey('pclip=100 bias=1 labelsz=12 xll=3 yll=2',par))
     Plot('vel'+tag,fdmod.cgrey('allpos=y pclip=100 bias=1.8 color=j labelsz=12 xll=3 yll=2',par))

     for j in (['vel','den']):
          Result(j+tag,[j+tag,'rr','ggone','ssall'],'Overlay')


Plot('zer',fdmod.cgrey('pclip=100 bias=1 labelsz=12 xll=3 yll=2',par))
Result('zer',['zer','rr','ggone','ssall'],'Overlay')



# 1D plot of the velocity model:
par['vels']=vels
Result('vel1d',None,
    '''
	cat %(vels)s  axis=3 |
        stack axis=2 |
	graph transp=y yreverse=y unit1="km" unit2="km/s" title="" label1=z label2=vel 
	plotfat=5 screenratio=3 wantscalebar=n labelsz=6 =3 labelsz=12 xll=3 yll=2 titlefat=3 xll=1.1
        parallel2=n wherexlabel=t min1=%(zmin)g max1=%(zmax)g min2=1.5 max2=3.5 d2tic=0.5 
        labelsz=12 =3 labelsz=12 xll=3 yll=2 titlefat=3 n1tic=20 xll=2.5 yll=.1

    '''%(par))


Result('vel1d-dash',None,
    '''
	cat %(vels)s  axis=3 |
        stack axis=2 |
	graph transp=y yreverse=y unit1="km" unit2="km/s" title="" label1=z label2=vel 
	plotfat=5 screenratio=3 wantscalebar=n labelsz=6 =3 labelsz=12 xll=3 yll=2 titlefat=3 xll=1.1
        parallel2=n wherexlabel=t min1=%(zmin)g max1=%(zmax)g  plotfat=2 plotcol=7 
        labelsz=12 =3 labelsz=12 xll=3 yll=2 titlefat=3 min2=1.5 max2=3.5 d2tic=0.5  n1tic=20 xll=2.5 yll=.1


    '''%(par))


for i in range(nvels):
     tag='%02d'%i 
     Plot('vel'+tag+'-fat','vel'+tag,
     '''
	stack axis=2 |
	graph transp=y yreverse=y unit1="km" unit2="km/s" title="" label1=z label2=vel
	screenratio=3 wantscalebar=n labelsz=6 =3 labelsz=12 xll=3 yll=2 titlefat=3 xll=1.1
	plotfat=12 min2=1.5 max2=3.5 d2tic=0.5 wantaxis=n 
        parallel2=n wherexlabel=t min1=%(zmin)g max1=%(zmax)g 
        labelsz=12 =3 labelsz=12 xll=3 yll=2 titlefat=3  n1tic=20 xll=2.5 yll=.1
     '''%par)
     Result('vel'+tag+'-fat',['Fig/vel1d-dash','vel'+tag+'-fat'],'Overlay')








for i in range(nvels):
     tag='%02d'%i 



# 1D plot of the velocity model:
par['vels']=vels

for i in range(nvels):
     tag='%02d'%i 

# ------------------------------------------------------------
# FD modeling to get data

images=''
cits=''
cips=''
citxs=''

for i in range(nvels):
    k='%02d'%i
    tag=k
    # migration (RTM)
    vel='vel'+k
    den='zer'
    images=images+' img'+k+'.rsf'
    cits= cits +' cit'+k+'.rsf'
    cips= cips + ' cip'+k+'.rsf'
    citxs= citxs +' citx'+k+'.rsf' 



    for cases in ['b b','b n','n b','n n']:
        words=cases.split()
        s=words[0]
        r=words[1]


#-----------------------------------------------------------------------------
#      example of wavefield separation.
#-----------------------------------------------------------------------------

#-----------------------------------------------------------------------------





c=['bb','bn','nb','nn']
c2=['bb','bn','nb','nn','ref']
back=['bn','nb']
xx=''

par['perc'] = 0.85

for j in range(nvels):
     k='%02d'%j
     xx=xx+' %s'%k


     Flow('img'+k+'_ref',map(lambda x:'img'+k+'_%s'%x, c),'cat axis=3 space=n  ${SOURCES[1:%d]}  |stack axis=3 norm=n'%len(c))
     Flow('cit'+k+'_ref',map(lambda x:'cit'+k+'_%s'%x, c),'cat axis=3 space=n  ${SOURCES[1:%d]}  |stack axis=3 norm=n'%len(c))
     # CIG
     Flow('citx'+k+'_ref',map(lambda x:'citx'+k+'_%s'%x, c),'cat axis=3 space=n  ${SOURCES[1:%d]}  |stack axis=3 norm=n'%len(c))
     Flow('cip'+k+'_ref',map(lambda x:'Cip'+k+'_%s'%x, c),'cat axis=4 space=n  ${SOURCES[1:%d]}  |stack axis=4 norm=n'%len(c))

     Flow('img'+k+'_byt',map(lambda x:'img'+k+'_%s'%x, c2),'cat axis=3 space=n  ${SOURCES[1:%d]} |byte gainpanel=a pclip=99.5  '%len(c2))  
     Flow('cit'+k+'_byt',map(lambda x:'cit'+k+'_%s'%x, c2),'cat axis=3 space=n  ${SOURCES[1:%d]}  |byte gainpanel=a pclip=99.8  '%len(c2))  
     Flow('citx'+k+'_byt',map(lambda x:'citx'+k+'_%s'%x, c2),'cat axis=3 space=n  ${SOURCES[1:%d]}|byte gainpanel=a pclip=99.8 '%len(c2))  
     Flow('cip'+k+'_byt',map(lambda x:'cip'+k+'_%s'%x, c2),'cat axis=4 space=n  ${SOURCES[1:%d]}|byte gainpanel=a pclip=99.3 '%len(c2))  
     Flow('cip'+k+'b_byt',map(lambda x:'cip'+k+'_%s'%x, back),'cat axis=4 space=n  ${SOURCES[1:%d]}|stack axis=4 norm=n|byte gainpanel=a pclip=100 '%len(back))  
     i=0
     for cases in ['b b','b n','n b','n n']:
          words=cases.split()
          s=words[0]
          r=words[1]
          
          # image
          Plot(  'img'+k+'_'+s+r,
               'img'+k+'_byt',
               'window n3=1 f3=%d |'%i + fdmod.cgrey('pclip=99.8 labelsz=4  titlesz=4    labelsz=8 xll=3 yll=2 yll=.01',par))
#          fdmod.wframe('img'+k+'_'+s+r, 'img'+k+'_byt',i,'  labelsz=12 xll=3 yll=2',par)

          Result('img'+k+'_'+s+r,['img'+k+'_'+s +r,'rr','ssall'],'Overlay')
     
          # CIG
          Result('cit'+k+'_'+s+r,
                 'cit'+k+'_byt',
                 'window n3=1 f3=%d |'%i + adcig.tgrey('labelsz=14 =4 labelsz=12 xll=3 yll=2   labelsz=12 xll=3 yll=2 yll=.01',par))
          
          Result('citx'+k+'_'+s+r,
                 'citx'+k+'_byt',
                 'window n3=1 f3=%d |'%i + adcig.xgrey('labelsz=14 =4 labelsz=12 xll=3 yll=2   labelsz=12 xll=3 yll=2 yll=.01',par))

          Result('cip'+k+'_'+s+r,
                 'cip'+k+'_byt',
                 'window n4=1 f4=%d |'%i + adcig.egrey('wherexlabel=t labelsz=14 =4 labelsz=12 xll=3 yll=2 yll=1  labelsz=12 xll=3 yll=2',par))

          i+=1 



     Plot(  'img'+k+'_ref',
          'img'+k+'_byt',
          'window n3=1 f3=%d |'%(len(c2)-1) + fdmod.cgrey('pclip=99.8 labelsz=4  titlesz=4    labelsz=8 xll=3 yll=2 yll=.01',par))
 #    fdmod.wframe('img'+k+'_ref','img'+k+'_byt',len(c2)-1,'  labelsz=12 xll=3 yll=2',par)

     Result('img'+k+'_ref',['img'+k+'_ref','rr','ssall'],'Overlay')

     Result('cit'+k+'_ref',
                 'cit'+k+'_byt',
                 'window n3=1 f3=%d |'%(len(c2)-1) + adcig.tgrey('labelsz=14 =4 labelsz=12 xll=3 yll=2    labelsz=12 xll=3 yll=2 yll=.01',par))


     Result('cip'+k+'_ref',
                 'cip'+k+'_byt',
                 'window n4=1 f4=%d |'%(len(c2)-1) + adcig.egrey('wherexlabel=t labelsz=14 =4 labelsz=12 xll=3 yll=2 yll=1  labelsz=12 xll=3 yll=2',par))


    #################################################################################
    ###################### Let us build the "pure" artifacts ########################
    #################################################################################


     Flow('img'+k+'_back',map(lambda x:'img'+k+'_%s'%x,back),'cat axis=3 space=n  ${SOURCES[1:%d]}  |stack axis=3 norm=n'%len(back))
     Flow('cit'+k+'_back',map(lambda x:'cit'+k+'_%s'%x,back),'cat axis=3 space=n  ${SOURCES[1:%d]}  |stack axis=3 norm=n'%len(back))
     Flow('citx'+k+'_back',map(lambda x:'citx'+k+'_%s'%x,back),'cat axis=3 space=n  ${SOURCES[1:%d]}  |stack axis=3 norm=n'%len(back))
     Flow('cip'+k+'_back',map(lambda x:'cip'+k+'_%s'%x,back),'cat axis=4 space=n  ${SOURCES[1:%d]}  |stack axis=4 norm=n'%len(back))

     Result('cit'+k+'_back','scale axis=123 |'+  adcig.tgrey('labelsz=14 =4 labelsz=12 xll=3 yll=2   labelsz=12 xll=3 yll=.01',par))
     Result('citx'+k+'_back','scale axis=123 |'+  adcig.xgrey('labelsz=14 =4 labelsz=12 xll=3 yll=2   labelsz=12 xll=3 yll=.01',par))
     Result('cip'+k+'_back','cip'+k+'_back','scale axis=12 | byte gainpanel=a pclip=99.9|'+ adcig.egrey('wherexlabel=t labelsz=14 =4 labelsz=12 xll=3 yll=2  labelsz=12 xll=3 yll=2',par))

     Flow('penal_cit'+k+'_back','cit'+k+'_back','scale axis=123|math output="abs(x2)*input"')
     Flow('penal_cix'+k+'_back','citx'+k+'_back','scale axis=123|math output="abs(x2)*input"')
#     Flow('penal_cip'+k+'_back','cip'+k+'_back','scale axis=3 %g|math output="sqrt((x1^2) +0.5*(1+sign(x3))*(%g*x1)^2 +0.5*(1-sign(x1))*(3.5*x3)^2   )*input"'%(1/par['perc'],par['perc']*2.2))
#     eps=0.00000000000000
#     Flow('penal_cip'+k+'_back',['cip05_back','cip'+k+'_back'],'scale|envelope sfmath output="1/(input+%g)"|sfscale axis=123 |math y=${SOURCES[1]} output="y*input"'%eps)


     eps=1e-15
     Flow('penal_cip'+k+'_back',['cip05_back','cip'+k+'_back'],'scale|envelope  |math y=${SOURCES[1]} output="y/(input+%g)"'%eps)


#     Flow('penal_cip'+k+'_back','cip'+k+'_back','scale axis=3 %g|math output="sqrt((x1^2) +0.5*(1+sign(x3))*(%g*x1)^2 +0.5*(1-sign(x1))*(3.5*x3)^2   )*input"'%(1/par['perc'],par['perc']*2.2))
#     Flow('penal_cip'+k+'_back','cip'+k+'_back','agc rect2=100 repeat=3|math output="sqrt((x1)^2 +(%g*x3)^2+0.0001)*input"'%(3.5))

     # Penalized CIP:
#     Flow('penal_cip'+k+'_back',['cip04_back','cip'+k+'_back'],
#        '''
#        envelope |
#        math x=${SOURCES[1]} output="x/(input+0.00001)"
#        ''')
     # penalized CIP plot
     Result('penal_cip'+k+'_back','penal_cip'+k+'_back',' byte gainpanel=a |'+ adcig.egrey('wherexlabel=t  labelsz=12 xll=3 yll=2',par))








#     Flow('penal_cip'+k+'_back','cip'+k+'_back','scale axis=3|math output="sqrt(x1^2+x2^2 +(%g*x3)^2 )*input"'%(3.5))


     par['zi']=math.floor(zo*par['perc'])
     Flow('OF_cix'+k+'_back','penal_cix'+k+'_back','math output="abs(input)"| stack axis=2 norm=n| window n1=%(zi)d |stack axis=1 norm=n '%par)
     Flow('OF_cit'+k+'_back','penal_cit'+k+'_back','math output="abs(input)"| stack axis=2 norm=n|stack axis=1 norm=n ')
     Flow('OF_cip'+k+'_back','penal_cip'+k+'_back','math output="abs(input)"| stack axis=1 norm=n|stack axis=1 norm=n |stack axis=1 norm=n')




     par['perc'] = par['perc'] + par['perc_inc']
     

Result('Penalty_cip','cip05_back','scale|envelope  |math output="1/(input+%g)" |byte gainpanel=a |'%1e-14 + adcig.egrey('wherexlabel=t labelsz=14 =4 labelsz=12 xll=3 yll=2   allpos=y labelsz=12 xll=3 yll=2',par))
Result('Penalty_cit','cit05_back','math output="abs(x2)" |byte gainpanel=a |' + adcig.tgrey('labelsz=14 =4 labelsz=12 xll=3 yll=2    labelsz=12 xll=3 yll=2 yll=.01',par))
Result('Penalty_cix','citx05_back','math output="abs(x2)" |byte gainpanel=a |' + adcig.xgrey('labelsz=14 =4 labelsz=12 xll=3 yll=2    labelsz=12 xll=3 yll=2 yll=.01',par))

COF=xx.split()

Flow('OF_cix',map(lambda x:'OF_cix%s_back'%x, COF),'cat axis=1 space=n  ${SOURCES[1:%d]}| put o1=-15 d1=3|scale axis=1|window n1=9 f1=1 |scale axis=1|math output="1-input"|scale axis=1|math output="1-input"'%nvels)
Flow('OF_cit',map(lambda x:'OF_cit%s_back'%x, COF),'cat axis=1 space=n  ${SOURCES[1:%d]}| put o1=-15 d1=3|scale axis=1|window n1=9 f1=1 |scale axis=1|math output="1-input"|scale axis=1|math output="1-input" '%nvels)
Flow('OF_cip',map(lambda x:'OF_cip%s_back'%x, COF),'cat axis=1 space=n  ${SOURCES[1:%d]}| put o1=-15 d1=3|scale axis=123 |math output="input" | window n1=9 f1=1 |scale axis=1|math output="1-input"|scale axis=1 |math output="1-input"'%nvels)

Result('OF_cix','graph min=0 max=1 n2tic=40 title="" label1="velocity error(%)" label2="J" labelsz=6 parallel2=n labelrot=n =3 plotfat=16 screenratio=0.5 screenht=6 yll=1 n2tic=20')
Result('OF_cit','graph min=0 max=1 n2tic=40 title="" label1="velocity error(%)" label2="J" labelsz=6 parallel2=n labelrot=n =3 plotfat=16 screenratio=0.5 screenht=6 yll=1 n2tic=20')
Result('OF_cip','graph min=0 max=1 n2tic=40 title="" label1="velocity error(%)" label2="J" labelsz=6 parallel2=n labelrot=n =3 plotfat=16 screenratio=0.5 screenht=6 yll=1 n2tic=20')



Result('OF_join',['OF_cix','OF_cit','OF_cip'],'cat ${SOURCES[1]} ${SOURCES[2]} axis=2| graph min=0 max=1 n2tic=40 title="" label1="velocity error(%)" label2="J" labelsz=6 parallel2=n labelrot=n =3 plotfat=16 screenratio=0.5 screenht=6 yll=1')





frames= range(0, 625 , par['jsnap_gr'] )

# cases to test in a movie!
for k in ['05']:

#     Result('cip'+k, 'cipbyt', 'window n4=1 f4=%d |'%j + adcig.egrey(' titlesz=12',par))
     cases='s-b_r-b'    
     Flow('cross_corr'+cases+k,['wts-b'+k,'wtr-b'+k],'math r=${SOURCES[1]} output="r*input " ')
     Flow('cross_corr'+cases+k,['wts-b'+k,'wtr-b'+k],'math r=${SOURCES[1]} output="r*input " ')
     ## ------------------------------------------------------------ 
     ## plot wavefield frames

     for i in range(0, 625 , par['jsnap_gr'] ):
         tag = '-%03d'%i
         t= i*par['dt']
         rarray='rr'
		   
         #Source wavefield frame
    	 fdmod.wframe('wts-b'+k+tag,
	     'wts-b'+k,i,'wheretitle=t labelsz=4 titlesz=4 labelsz=12  label1="" unit1="" label2="" unit2="" xll=3 yll=2 yll=.01 wantaxis=n pclip=96.5',par)
    	 fdmod.wframe('awts-b'+k+tag,
    	 'wts-b'+k,i,' wheretitle=t  labelsz=4  titlesz=4  label1="" unit1="" label2="" unit2="" labelsz=12 xll=3 yll=2 yll=.01',par)
         Result( 'wts-b'+k+tag,
	     ['wts-b'+k+tag,rarray],'Overlay')

         #Receiver wavefield frame
    	 fdmod.wframe('wtr-b'+k+tag,
	     'wtr-b'+k,i,'wheretitle=t  labelsz=4  titlesz=4  pclip=98.5  label1="" unit1="" label2="" unit2=""  labelsz=12 xll=3 wantaxis=n  yll=2 yll=.01',par)
    	 fdmod.wframe('awtr-b'+k+tag,
	     'wtr-b'+k,i,'  labelfat=1 titlesz=12',par)
    	 Result( 'wtr-b'+k+tag,
	     ['wtr-b'+k+tag,rarray],'Overlay')

    	 #Cross-corr wavefield frame
         fdmod.wframe('cross_corr'+cases+k+tag,
    	 'cross_corr'+cases+k,i,'wheretitle=t  labelsz=4  titlesz=4   pclip=98.5  label1="" unit1="" label2="" unit2="" labelsz=12  wantaxis=n xll=3 yll=2 yll=.01',par)
         fdmod.wframe('across_corr'+cases+k+tag,
    	 'cross_corr'+cases+k,i,' wheretitle=t pclip=99  labelfat=1 titlesz=12',par)
         Result( 'cross_corr'+cases+k+tag,
         ['cross_corr'+cases+k+tag,rarray],'Overlay')

         #Image so far:
         Flow('img'+cases+k+tag,'cross_corr'+cases+k,
         'window n3=%d| stack axis=3 norm=n '%(i+1))

     Flow('imgsfbyt'+'s-b_r-b'+k,map(lambda x:'img'+'s-b_r-b'+k+'-'+'%03d'%x, frames),'cat axis=3 space=n  ${SOURCES[1:%d]}'%len(frames)) 

     

     j=0
     for i in range(0, 625 , par['jsnap_gr'] ):
         tag = '-%03d'%i
         t= i*par['dt']
         rarray='rr'
         cases='s-b_r-b'

#         fdmod.wframe('img'+cases+k+'_'+tag,
#         'imgsfbyt'+cases+k,j,' wheretitle=t title="Ws*Wr(0-->%4.3f)" pclip=99'%t,par)

         #Plot('img'+cases+k+'_'+tag, 'imgsfbyt'+cases+k, 'window f3=%d n3=1|'%(i)+ fdmod.cgrey('pclip=100 titlesz=12',par))
         fdmod.wframe('img'+cases+k+'_'+tag, 'imgsfbyt'+cases+k,j,'wheretitle=t  label1="" unit1="" label2="" unit2="" labelsz=4  titlesz=4   wantaxis=n pclip=98.5   labelsz=12 xll=3 yll=2 yll=.01 ',par)
         fdmod.wframe('aimg'+cases+k+'_'+tag, 'imgsfbyt'+cases+k,j,' wheretitle=t  pclip=99.8 labelfat=1 titlesz=12',par)
         Result( 'img'+cases+k+tag,
         ['img'+cases+k+'_'+tag,'rr'],'Overlay')

         j = j +1
# ------------------------------------------------------------

##############################################################








Flow('citx_ref_byt',map(lambda x:'citx%s_ref'%x, COF),'cat axis=3 space=n  ${SOURCES[1:%d]}|byte gainpanel=a pclip=99.8 '%nvels)

i=0

for j in range(nvels):
     k='%02d'%j
     xx=xx+' %s'%k

     Result('citx'+k+'_ref',
            'citx_ref_byt',
            'window n3=1 f3=%d |'%i + adcig.xgrey('labelsz=14 =4 labelsz=12 xll=3 yll=2    labelsz=12 xll=3 yll=2 yll=.01',par))
     i+=1


##############################################################

#Movie snapshots for article:



'''
I need to plot:
citx05_ref
cit05_ref
cip05_ref
'''



### CIT

Plot('t1',None,
     'box lab_fat=3 boxit=y   x0=%g y0=%g label="%s" xt=%g yt=%g lab_fat=1'%
     (4.4,6.7,"a",-0.5,0.))

Plot('t2',None,
     'box lab_fat=3 boxit=y   x0=%g y0=%g label="%s" xt=%g yt=%g lab_fat=1'%
     (5.8,6.5,"b",0.,0.7))


Plot('t3',None,
     'box lab_fat=3 boxit=y   x0=%g y0=%g label="%s" xt=%g yt=%g lab_fat=1'%
     (5.1,3.9,"c",-0.8,0.4))

Plot('t4',None,
     'box lab_fat=3 boxit=y   x0=%g y0=%g label="%s" xt=%g yt=%g lab_fat=1'%
     (3.9,5.1,"c",0.4,-0.8))

Result('cit05_ref1','Fig/cit05_ref t1 t2 t3 t4','Overlay')
Result('cit05_nn1','Fig/cit05_nn  t3 t4','Overlay')
Result('cit05_bn1','Fig/cit05_bn t1 ','Overlay')
Result('cit05_nb1','Fig/cit05_nb t1','Overlay')
Result('cit05_bb1','Fig/cit05_bb t2 ','Overlay')

### CIX

Plot('x1',None,
     'box lab_fat=3 boxit=y   x0=%g y0=%g label="%s" xt=%g yt=%g lab_fat=1'%
     (4.4,6.7,"a",-0.5,0.))

Plot('x2',None,
     'box lab_fat=3 boxit=y   x0=%g y0=%g label="%s" xt=%g yt=%g lab_fat=1'%
     (4.6,4.3,"c",0.0,-0.7))


Plot('x3',None,
     'box lab_fat=3 boxit=y   x0=%g y0=%g label="%s" xt=%g yt=%g lab_fat=1'%
     (3.9,5.3,"b",-0.5,-0.5))

Plot('x4',None,
     'box lab_fat=3 boxit=y   x0=%g y0=%g label="%s" xt=%g yt=%g lab_fat=1'%
     (5.1,5.3,"b",0.5,-0.5))

Result('citx05_ref1','Fig/citx05_ref x1 x2 x3 x4','Overlay')
Result('citx05_nn1','Fig/citx05_nn  x2','Overlay')
Result('citx05_bn1','Fig/citx05_bn x1 ','Overlay')
Result('citx05_nb1','Fig/citx05_nb x1','Overlay')
Result('citx05_bb1','Fig/citx05_bb x3 x4 ','Overlay')


### CIP

Plot('c1',None,
     'box lab_fat=3 boxit=y   x0=%g y0=%g label="%s" xt=%g yt=%g lab_fat=1'%
     (3.7,6.6,"c",-0.5,0.))

Plot('c2',None,
     'box lab_fat=3 boxit=y   x0=%g y0=%g label="%s" xt=%g yt=%g lab_fat=1'%
     (4.3,6.6,"b",0.5,0.))


Plot('c3',None,
     'box lab_fat=3 boxit=y   x0=%g y0=%g label="%s" xt=%g yt=%g lab_fat=1'%
     (8,2.5,"a",0.4,0.4))

Plot('c4',None,
     'box lab_fat=3 boxit=y   x0=%g y0=%g label="%s" xt=%g yt=%g lab_fat=1'%
     (8,3.3,"a",0.4,-0.4))

Result('cip05_ref1','Fig/cip05_ref c1 c2 c3 c4','Overlay')
Result('cip05_nn1','Fig/cip05_nn c1 ','Overlay')
Result('cip05_bn1','Fig/cip05_bn c3 c4 ','Overlay')
Result('cip05_nb1','Fig/cip05_nb c3 c4','Overlay')
Result('cip05_bb1','Fig/cip05_bb ','Overlay')



#### Image



Plot('i1',None,
     'box lab_fat=3 boxit=y   x0=%g y0=%g label="%s" xt=%g yt=%g lab_fat=1'%
     (7.4,2.0,"c",0.,-0.5))

Plot('i2',None,
     'box lab_fat=3 boxit=y   x0=%g y0=%g label="%s" xt=%g yt=%g lab_fat=1'%
     (8.4,2.0,"b",0.0,-0.5))


Plot('i3',None,
     'box lab_fat=3 boxit=y   x0=%g y0=%g label="%s" xt=%g yt=%g lab_fat=1'%
     (8,2.9,"a",0.4,-0.4))

Plot('i4',None,
     'box lab_fat=3 boxit=y   x0=%g y0=%g label="%s" xt=%g yt=%g lab_fat=1'%
     (10,2.8,"a",0.4,-0.4))

Result('img05_ref1','Fig/img05_ref i1 i2 i3 i4','Overlay')
Result('img05_nn1','Fig/img05_nn i1 ','Overlay')
Result('img05_bn1','Fig/img05_bn i4  ','Overlay')
Result('img05_nb1','Fig/img05_nb  i3','Overlay')
Result('img05_bb1','Fig/img05_bb i2','Overlay')








End()
