# 
from rsf.proj import *
import fdmod,adcig,encode,wemig,math
import commands, os

par = {
    'nt':2501, 'dt':0.001, 'ot':0, 'lt':'t', 'ut':'s',     
    'nx':1000, 'dx':0.01,  'ox':0, 'lx':'x', 'ux':'km',
    'ny':1,    'dy':0.01,  'oy':0, 'ly':'y', 'uy':'km',
    'nz':600,  'dz':0.005, 'oz':0, 'lz':'z', 'uz':'km',
    'kt':150,
    'nb':150,
     'jsnap_gr':25

    }
fdmod.param(par)
# ------------------------------------------------------------
# source
par['xsou']=par['ox']+par['nx']/2*par['dx']
par['zsou']=par['oz']
par['ixsou']=par['nx']/2
par['izsou']=1

par['jcx']=5
par['ncx']=par['nx']/par['jcx']

# ------------------------------------------------------------
# source
fdmod.point('ss',par['xsou'],par['zsou'],par)
fdmod.horizontal('ttall',par['oz'],par)
Flow('ssall','ttall','window j2=%(jcx)d'%par)
Plot('ss',   fdmod.ssplot('',par))
Plot('ssall',fdmod.ssplot('',par))

# ------------------------------------------------------------
# receivers
fdmod.horizontal('rr',0,par)
Plot('rr',fdmod.rrplot('',par))

# ------------------------------------------------------------
# CIGs at uniformly-sampled locations
fdmod.boxarray('gt',
               par['nz'],par['oz'],par['dz'],
               par['nx'],par['ox'],par['dx'],
               par)
Flow('gg','gt',
     'put n2=%(nz)d n3=%(nx)d | window j3=%(jcx)d |'%par + 
     'put n2=%d n3=1'% (par['nz']*par['nx']/par['jcx']) )
fdmod.vertical('ggone',par['xsou'],par)
Plot('ggone',fdmod.qqplot('',par))

Flow('gg80','gg','put n2=%d n3=%d |window n3=1 f3=79'%(par['nz'],par['ncx']))
Plot('gg80',fdmod.qqplot('',par))


Flow('gg124','gg','put n2=%d n3=%d |window n3=1 f3=123'%(par['nz'],par['ncx']))
Plot('gg124',fdmod.qqplot('',par))
# ------------------------------------------------------------

# ------------------------------------------------------------
# EIC computational domain
par['nhz']=0
par['nhx']=100
par['nhz']=par['nhx']
par['nht']=100
par['dht']=par['dt']*10

adcig.tparam((par['nhx']*par['dx'])/(par['nht']*par['dt']),
             2*par['nht']+1,-par['nht']*par['dt'],par['dt'],
               par['nz']   ,            par['oz'],par['dz'],
             par)

adcig.xparam(
             2*par['nhx']+1,-par['nhx']*par['dx'],par['dx'],
               par['nz']   ,            par['oz'],par['dz'],
             par)

adcig.eparam(10.0,
             2*par['nhx']+1,-par['nhx']*par['dx'],par['dx'],
             2*par['nhz']+1,-par['nhz']*par['dz'],par['dz'],
             2*par['nht']+1,-par['nht']*par['dt'],par['dt'],
             par)

# ------------------------------------------------------------
# wavelet
fdmod.wavelet('wav_',12,par)
Flow(  'wav', 'wav_','transp')

Result('wav','window n2=500 |'+fdmod.waveplot('',par))

# ------------------------------------------------------------
# data mask
par['xk']=100
par['xl']=par['nx']-100

Flow('dmask',None,
     '''
     spike nsp=1 mag=1
     n1=%(nx)d d1=%(dx)g o1=%(ox)g k1=%(xk)d l1=%(xl)d
     n2=%(nt)d d2=%(dt)g o2=%(ot)g |
     smooth rect1=30 repeat=50
     ''' % par)
Result('dmask','transp |'+fdmod.dgrey('pclip=99 screenratio=1.5',par))

# ------------------------------------------------------------
# reflectors
zo=300
perc=0.75
perc_inc=0.05

par['perc']=perc
par['perc_inc']=perc_inc

nvels=11

vels=''
dens=''
for i in range(nvels):
# ------------------------------------------------------------
# CIPs
     par['zi']=math.floor(zo*par['perc'])
     print i, par['zi']
     tag='%02d'%i
     
     fdmod.horizontal('ct'+tag,par['zi']*par['dz'],par)
     Flow('cc'+tag,'ct'+tag,'window j2=%(jcx)d'%par)
     Plot('cc'+tag,   fdmod.qqplot('plotcol=5 plotfat=10',par))

     Flow('dentmp'+tag,None,
         '''
         spike nsp=1 mag=1.0
         n1=%(nz)d o1=%(oz)g d1=%(dz)g k1=%(zi)d l1=%(nz)d |
         spray axis=2 n=%(nx)d o=%(ox)g d=%(dx)g |
         add add=1
         ''' % (par))
     Flow('vel'+tag,'den'+tag,'math output="%(perc)f*(input*0 +2.2) "'%( par))
     Flow('den'+tag,'dentmp'+tag,'math output="%(perc)f*(2.2*(2-input) ) +(input-1)*(3.5) "'%( par))
     Flow('den-const'+tag,'zer','math output="%(perc)f*(2.2 +input*0)"'%( par))

     par['perc'] = par['perc'] + par['perc_inc']
     vels=vels+'vel'+tag+'.rsf '
     dens=dens+'vel'+tag+'.rsf '




Flow('zer','den00','math output="1.0"')
Flow('vc','den00','math output="2.2"')


for i in range(nvels):
     tag='%02d'%i 
     Plot('den'+tag,fdmod.cgrey('pclip=100 bias=1',par))
     Plot('vel'+tag,fdmod.cgrey('allpos=y pclip=100 bias=1.8 color=j',par))

     for j in (['vel','den']):
          Result(j+tag,[j+tag,'rr','ggone','ssall'],'Overlay')


Plot('zer',fdmod.cgrey('pclip=100 bias=1',par))
Result('zer',['zer','rr','ggone','ssall'],'Overlay')

# 1D plot of the velocity model:
par['vels']=vels
Result('vel1d',None,
    '''
	cat %(vels)s  axis=3 |
        stack axis=2 |
	graph transp=y yreverse=y unit1="km" unit2="km/s" title="" label1=z label2=vel 
	plotfat=5 screenratio=3 wantscalebar=n labelsz=6 labelfat=3 titlesz=12 titlefat=3 xll=1.1
        parallel2=n wherexlabel=t min1=%(zmin)g max1=%(zmax)g
        labelsz=6 labelfat=3 titlesz=12 titlefat=3  min2=1.5 max2=3 d2tic=0.5 
    '''%(par))


Result('vel1d-dash',None,
    '''
	cat %(vels)s  axis=3 |
        stack axis=2 |
	graph transp=y yreverse=y unit1="km" unit2="km/s" title="" label1=z label2=vel 
	plotfat=5 screenratio=3 wantscalebar=n labelsz=6 labelfat=3 titlesz=12 titlefat=3 xll=1.1
        parallel2=n wherexlabel=t min1=%(zmin)g max1=%(zmax)g  plotfat=2 plotcol=7 
        labelsz=6 labelfat=3 titlesz=12 titlefat=3  min2=1.5 max2=3 d2tic=0.5 
    '''%(par))


for i in range(nvels):
     tag='%02d'%i 
     Plot('vel'+tag+'-fat','vel'+tag,
     '''
	stack axis=2 |
	graph transp=y yreverse=y unit1="km" unit2="km/s" title="" label1=z label2=vel
	screenratio=3 wantscalebar=n labelsz=6 labelfat=3 titlesz=12 titlefat=3 xll=1.1
	plotfat=12 min2=1.5 max2=3 d2tic=0.5 wantaxis=n 
        parallel2=n wherexlabel=t min1=%(zmin)g max1=%(zmax)g 
        labelsz=6 labelfat=3 titlesz=12 titlefat=3
     '''%par)
     Result('vel'+tag+'-fat',['Fig/vel1d-dash','vel'+tag+'-fat'],'Overlay')

# ------------------------------------------------------------
# FD modeling




fdmod.awefd2d('dd','wd','wav','vel05','den05','ss','rr','',par)
fdmod.awefd2d('do','wo','wav','vel05','zer', 'ss','rr','',par)

Flow('dat',['dd','do','dmask'],
     '''
     add scale=+1,-1 ${SOURCES[1]} |
     add mode=p      ${SOURCES[2]}
     ''')

Flow('wfl',['wd','wo'],
     'add scale=+1,-1 ${SOURCES[1]}')

Result('dd','transp |' + fdmod.dgrey('pclip=99.9 screenratio=1.5',par))
Result('do','transp |' + fdmod.dgrey('pclip=99.9 screenratio=1.5',par))
Result('dat','transp |' + fdmod.dgrey('pclip=99.9 screenratio=1.5',par))
Result('wfl',             fdmod.wgrey('pclip=99.9',par))

Flow('dts','wav','window squeeze=n')
Flow('dtr','dat','window squeeze=n')


images=''
cits=''
cips=''
citxs=''

for i in range(nvels):
    k='%02d'%i
    # migration (RTM)
    vel='vel'+k
    print k	
    images=images+' img'+k+'.rsf'
    cits= cits +' cit'+k+'.rsf'
    cips= cips + ' cip'+k+'.rsf'
    citxs= citxs +' citx'+k+'.rsf' 



    wemig.fWRawe('dts','wts-b'+k,vel,'den'+k,'ss','jdata=4 jsnap=4 ',par)
    wemig.fWRawe('dts','wts-n'+k,vel,'den-const'+k,'ss','jdata=4 jsnap=4 ',par)


    wemig.bWRawe('dtr','wtr-b'+k,vel,'den'+k,'rr','jdata=4 jsnap=4 ',par)
    wemig.bWRawe('dtr','wtr-n'+k,vel,'den-const'+k,'rr','jdata=4 jsnap=4 ',par)



    for cases in  ['s-b r-n','s-b r-b','s-n r-n','s-n r-b']:
        words=cases.split()
        s=words[0]
        r=words[1]


        wemig.cic('img'+s+'_'+r+k,'wt'+s+k,'wt'+r+k,'nbuf=100 ',par)

        wemig.eic('cig'+s+'_'+r+k,'wt'+s+k,'wt'+r+k,'gg'  ,'nhx=0 nhz=0 ',par)
        wemig.eic('cigx'+s+'_'+r+k,'wt'+s+k,'wt'+r+k,'gg'  ,'nht=0 nhz=0 ',par)
#        wemig.eic('cips'+s+'_'+r+k,'wt'+s+k,'wt'+r+k,'cc'+k,'           ',par)

        Flow('citx'+s+'_'+r+k,
            'cigx'+s+'_'+r+k,
            '''
            put n4=%d n5=%d label4=z label5=c |
            window |
            stack axis=3 | transp
            '''%(par['nz'],par['nx']/par['jcx'])
            )


        Flow('cit'+s+'_'+r+k,
            'cig'+s+'_'+r+k,
            '''
            put n4=%d n5=%d label4=z label5=c |
            window |
            stack axis=3 | transp
            '''%(par['nz'],par['nx']/par['jcx'])
            )

#        Flow('cip'+s+'_'+r+k,
#            'cips'+s+'_'+r+k,
#            '''
#            stack axis=4 
#            '''
#            )


        Flow('citx124-'+s+'_'+r+k,
            'cigx'+s+'_'+r+k,
            '''
            put n4=%d n5=%d label4=z label5=c |
            window |
            window f3=123 n3=1 |
            transp
            '''%(par['nz'],par['nx']/par['jcx'])
            )
        

        Flow('cit124-'+s+'_'+r+k,
            'cig'+s+'_'+r+k,
            '''
            put n4=%d n5=%d label4=z label5=c |
            window |
            window f3=123 n3=1 |
            transp
            '''%(par['nz'],par['nx']/par['jcx'])
            )

#        Flow('cip124-'+s+'_'+r+k,
#            'cips'+s+'_'+r+k,
#            '''
#            window n4=1 f4=123  
#            '''
#            ) 






v= range(nvels)
for cases in  ['s-b_r-n','s-b_r-b','s-n_r-n','s-n_r-b']:

     Flow('imgbyt'+cases,map(lambda x:'img'+cases+'%02d'%x, v),'cat axis=3 space=n  ${SOURCES[1:%d]}| byte gainpanel=a pclip=99.5'%len(v)) 
     Flow('citbyt'+cases,map(lambda x:'cit'+cases+'%02d'%x, v),'cat axis=3 space=n ${SOURCES[1:%d]}| byte gainpanel=a pclip=99.5'%len(v)) 
     Flow('citxbyt'+cases,map(lambda x:'citx'+cases+'%02d'%x, v),'cat axis=3 space=n ${SOURCES[1:%d]}| byte gainpanel=a pclip=99.5'%len(v))
#     Flow('cipbyt'+cases,None,'cat axis=4 space=n %s| byte gainpanel=a pclip=99.5'%cips)

     for j in range(nvels):
         k='%02d'%j
         # image

         Plot(  'img'+cases+k,
          'imgbyt'+cases,
          'window n3=1 f3=%d |'%j + fdmod.cgrey('',par))
         Result('img'+cases+k,['img'+cases+k,'rr','ssall','ggone'],'Overlay')

         # CIG
         Result('cit'+cases+k,
            'citbyt'+cases,
            'window n3=1 f3=%d |'%j + adcig.tgrey('',par))
     
         Result('citx'+cases+k,
            'citxbyt'+cases,
            'window n3=1 f3=%d |'%j + adcig.xgrey('',par))

#         Result('cip'+cases+k, 'cipbyt'+cases, 'window n4=1 f4=%d |'%j + adcig.egrey('',par))
        

################################################################################################################
#################################    IMAGING MOVIE FOR CORRECT MODEL ###########################################
################################################################################################################

         if(cases+k=='s-b_r-b05'):
              Flow('cross_corr'+cases+k,['wts-b'+k,'wtr-b'+k],'math r=${SOURCES[1]} output="r*input " ')
	      ## ------------------------------------------------------------ 
	      ## plot wavefield frames
	      for i in range(0, 625 , par['jsnap_gr'] ):
	           tag = '-%03d'%i
		   t= i*par['dt']
		   rarray='rr'
		   

   		   #Source wavefield frame
		   fdmod.wframe('wts-b'+k+tag,
		 	'wts-b'+k,i,' wheretitle=t title="Ws(%4.3f)"'%t,par)
		   Result( 'wts-b'+k+tag,
			['wts-b'+k+tag,rarray],'Overlay')

		      #Receiver wavefield frame
	           fdmod.wframe('wtr-b'+k+tag,
	          	'wtr-b'+k,i,' wheretitle=t  title="Wr(%4.3f)"'%t,par)
		   Result( 'wtr-b'+k+tag,
			['wtr-b'+k+tag,rarray],'Overlay')

		      #Cross-corr wavefield frame
		   fdmod.wframe('cross_corr'+cases+k+tag,
		 	'cross_corr'+cases+k,i,' wheretitle=t title="Ws*Wr(%4.3f)"'%t,par)
		   Result( 'cross_corr'+cases+k+tag,
			['cross_corr'+cases+k+tag,rarray],'Overlay')

		      #Image so far:
		   Flow('img'+cases+k+'_'+tag,'cross_corr'+cases+k,
				'window n3=%d|stack axis=3'%(i+1))




frames= range(0, 625 , par['jsnap_gr'] )

Flow('imgsfbyt'+'s-b_r-b05',map(lambda x:'img'+'s-b_r-b05_'+'-%03d'%x, frames),'cat axis=3 space=n  ${SOURCES[1:%d]}'%len(frames)) 
j=0
for i in range(0, 625 , par['jsnap_gr'] ):
     tag = '-%03d'%i
     t= i*par['dt']
     rarray='rr'
     cases='s-b_r-b'
     k='05'

     fdmod.wframe('img'+cases+k+'_'+tag,
            'imgsfbyt'+cases+k,j,' wheretitle=t title="Ws*Wr(%4.3f)"'%t,par)


     Result( 'img'+cases+k+'_'+tag,
	['img'+cases+k+'_'+tag,'rr'],'Overlay')

     j = j +1

             



########################################## Imaging experiment ##################################################################





Flow('mask05','den05','math output="(input-2.2)/1.3"|smooth rect1=15 |spray axis=3 n=626 o=0 d=0.004')




Flow ('ur_b05', ['wtr-b05','wtr-n05','mask05'],'add ${SOURCES[1]} scale=1,-1|math m=${SOURCES[2]} output="(1-m)*input"' )  
Flow ('ur_n05', ['wtr-b05','ur_b05'],'add ${SOURCES[1]} scale=1,-1')  

Flow ('us_b05', ['wts-b05','wts-n05','mask05'],'add ${SOURCES[1]} scale=1,-1|math m=${SOURCES[2]} output="(1-m)*input"' )  
Flow ('us_n05', ['wts-b05','us_b05'],'add ${SOURCES[1]} scale=1,-1')  

wemig.cic('img05_nn','us_n05','ur_n05','nbuf=100 ',par)
wemig.cic('img05_nb','us_n05','ur_b05','nbuf=100 ',par)
wemig.cic('img05_bn','us_b05','ur_n05','nbuf=100 ',par)
wemig.cic('img05_bb','us_b05','ur_b05','nbuf=100 ',par)

wemig.eic('cig05_nn','us_n05','ur_n05','gg'  ,'nhx=0 nhz=0 ',par)
wemig.eic('cig05_nb','us_n05','ur_b05','gg'  ,'nhx=0 nhz=0 ',par)
wemig.eic('cig05_bn','us_b05','ur_n05','gg'  ,'nhx=0 nhz=0 ',par)
wemig.eic('cig05_bb','us_b05','ur_b05','gg'  ,'nhx=0 nhz=0 ',par)






Flow('img05_ref','imgs-b_r-b05','cp')
Flow('cit05_ref','cits-b_r-b05','cp')


c=['nn','nb','bn','bb','ref']
Flow('img05_byt',map(lambda x:'img05_%s'%x, c),'cat axis=3 space=n  ${SOURCES[1:%d]}  | byte gainpanel=a pclip=98.5'%len(c)) 
j=0
for i in c:
    if (i!='ref'):
        Flow('cit05_'+i,
        'cig05_'+i,
        '''
        put n4=%d n5=%d label4=z label5=c |
        window |
        stack axis=3 | transp
        '''%(par['nz'],par['nx']/par['jcx'])
        )

    Plot(  'img05_'+i,
          'img05_byt',
          'window n3=1 f3=%d |'%j + fdmod.cgrey('',par))
    Result( 'img05_'+i,
	['img05_'+i,'rr','ggone'],'Overlay')


    j=j+1
 
Flow('cit05_byt',map(lambda x:'cit05_%s'%x, c),'cat axis=3 space=n  ${SOURCES[1:%d]}  | byte gainpanel=a pclip=98.5'%len(c)) 







j=0
for i in c:
   
    # CIG
    Result('cit05_'+i,
            'cit05_byt',
            'window n3=1 f3=%d |'%j + adcig.tgrey('',par))
    j+=1   








# ------------------------------------------------------------
End()
