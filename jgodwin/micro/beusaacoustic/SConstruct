from rsf.proj import *
import acousticfd as fd
import acousticplot as plot
import fdutil, stiffness

par = dict(
    nx = 100, dx=0.01, ox=-.02,
    nz = 390, dz=0.005, oz=1.737,
    nt = 2501, dt = 0.0005, ot = 0.0,kt=100,freq=25,
    nb = 100
)
fdpar = fdutil.defaults(**par)

fdutil.constant2d('ro',1.0,**par)
fdutil.point2d('sou',2.781,.5,**par)

fd.ricker('wave',**par)

# Make the velocity model
velocities = [10810.0,11000.0,13300.0,13200.0,13700.0,12800.0,11800.0,11500.0,11200.0,11000.0,12200.0,13500.0,13500.0,16600.0,17000.0,17000.0,11100.0,11100.0,15500.0,15700.0,15700.0,14400.0,14300.0,13300.0,10000.0,10000.0,10700.0,13300.0,10200.0,13230.0,18270.0,18690.0,12810.0,16695.0,13335.0,12075.0,9870.0,11865.0,11340.0,9502.5,9765.0,18165.0,17010.0]

depths = [6000.0,6100.0,6200.0,6300.0,6400.0,6450.0,6500.0,6550.0,6600.0,6620.0,6700.0,6750.0,6920.0,7100.0,7130.0,7180.0,7250.0,7350.0,7370.0,7400.0,7450.0,7550.0,7600.0,7650.0,7700.0,7800.0,7850.0,7900.0,8000.0,9160.0,9300.0,9600.0,9750.0,9800.0,10350.0,10500.0,11200.0,11240.0,11500.0,11660.0,11800.0,11940.0]

# Convert depth to index
id = [ int((x*.3048/1000.0 - par['oz'])/par['dz']) for x in depths]
id.insert(0,1) # Starting index is 1
# Fix the indices, so that they start from 1 and go to nz for the end indices
fid = []
for ii in range(len(depths)):
    fid.append(id[ii+1]-1)
fid.append(par['nz'])

# Convert velocities from ft/s to km/s
vel = [x*.3048/1000.0 for x in velocities]

def flatten(vals):
    return reduce(lambda x,y: str(x)+','+str(y),vals)

#print len(vel), len(id), len(fid)
#for i in range(len(id)):
#    print id[i],fid[i]
assert len(vel) == len(id) == len(fid)


# Make the velocity file.
Flow('vp',None,
    '''
    spike n1=%(nz)d o1=%(oz)f d1=%(dz)f 
    ''' % (par) + 
    '''
    k1=%s l1=%s nsp=%d mag=%s | 
    ''' % (flatten(id),flatten(fid),len(vel),flatten(vel)) + 
    '''
    spray axis=2 n=%(nx)d o=%(ox)f d=%(dx)f | 
    sfsmooth rect1=2 repeat=1
    ''' % (par))

Flow('rr','rr-all.hh','window f1=1')

fd.run('data','vp','ro','wave','sou','rr','wfld', **fdpar)

fdpar['srctype'] = 1
#groups = [('A',None,50),('B',50,None)]
#groups = [('A',None,25),('B',25,50),('C',50,None)]

groups = [
    ('A',None,8),('C',8,16),('E',16,24),('F',24,32),('G',32,37),
    ('B',37,45),('H',45,53),('D',53,61),('I',61,None)]
wflds = []
for ig in range(len(groups)):
    name,start,end = groups[ig]
    tag = name
    if not start:
        Flow('data'+tag,'data',
            '''
            window n1=%d
            ''' % end)
        Flow('rk'+tag,'rr',
            '''
            window n2=%d
            ''' % end)
    elif not end:
        Flow('data'+tag,'data',
            '''
            window f1=%d
            ''' % (start))
        Flow('rk'+tag,'rr',
            '''
            window f2=%d
            ''' % start)
    else:
        Flow('data'+tag,'data',
            '''
            window f1=%d n1=%d
            ''' % (start,end-start))
        Flow('rk'+tag,'rr',
            '''
            window f2=%d n2=%d
            ''' % (start,end-start))

    Flow('data'+tag+'-rev','data'+tag,
        '''
        reverse which=2 opt=i 
        ''')
    fd.run('junk-data'+tag,'vp','ro','data'+tag+'-rev',
        'rk'+tag,'rr','wfld'+tag, **fdpar)
    Flow('wfld'+tag+'-scale','wfld'+tag,
        '''
        scale axis=1234 | transp plane=34
        ''')
    wflds.append('wfld'+tag+'-scale')

Flow('sic',wflds,
    '''
    semblance3d thr=0.1 ${SOURCES[1:-1]}
    ''')

End()
